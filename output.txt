Compiling 1 files with Solc 0.8.28
Solc 0.8.28 finished in 30.73s
Compiler run successful!

Ran 1 test for test/utils/SoladyTest.sol:SoladyTest
[PASS] test__codesize() (gas: 3653)
Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 876.00µs (61.54µs CPU time)

Ran 1 test for test/utils/TestPlus.sol:TestPlus
[PASS] test__codesize() (gas: 343)
Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 39.04µs (8.67µs CPU time)

Ran 1 test for test/Base.t.sol:BaseTest
[PASS] test__codesize() (gas: 45575)
Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 1.16ms (12.50µs CPU time)

Ran 2 tests for test/LibNonce.t.sol:LibNonceTest
[PASS] testCheckAndIncrementTypeUint256MaxNonceReverts() (gas: 26949)
[PASS] test__codesize() (gas: 45941)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 1.33ms (104.54µs CPU time)

Ran 6 tests for test/SimpleSettler.t.sol:SimpleSettlerTest
[PASS] testNonOwnerCannotWriteDirectly() (gas: 40778)
[PASS] testOwnerCanWriteDirectly() (gas: 62723)
[PASS] testReplayIsHarmless() (gas: 120584)
[PASS] testSendFunction() (gas: 47890)
[PASS] testWriteWithInvalidSignature() (gas: 55150)
[PASS] testWriteWithValidSignature() (gas: 79558)
Suite result: ok. 6 passed; 0 failed; 0 skipped; finished in 2.33ms (1.40ms CPU time)

Ran 24 tests for test/Escrow.t.sol:EscrowTest
[PASS] testAnyoneCanTriggerRefunds() (gas: 518597)
[PASS] testBasicEscrowCreation() (gas: 390575)
[PASS] testCannotDoubleRefundDepositor() (gas: 453512)
[PASS] testCannotDoubleRefundRecipient() (gas: 472915)
[PASS] testCannotRefundAfterSettlement() (gas: 553784)
[PASS] testCannotRefundBeforeDeadline() (gas: 451786)
[PASS] testCannotRefundFromFinalizedState() (gas: 545018)
[PASS] testDepositorRefundAfterDeadline() (gas: 447391)
[PASS] testDuplicateEscrowCreation() (gas: 411239)
[PASS] testEscrowNativeETH_CreateAndSettle() (gas: 438848)
[PASS] testEscrowNativeETH_IncorrectValue() (gas: 538737)
[PASS] testEscrowNativeETH_MixedWithERC20() (gas: 2424952)
[PASS] testEscrowNativeETH_RefundFlow() (gas: 377473)
[PASS] testFullRefundAmount() (gas: 466840)
[PASS] testIndependentRefundsDepositorFirst() (gas: 535945)
[PASS] testIndependentRefundsRecipientFirst() (gas: 536010)
[PASS] testMultipleEscrowsInOneCall() (gas: 1275446)
[PASS] testRecipientRefundAfterDeadline() (gas: 466760)
[PASS] testRefundAmountGreaterThanEscrowAmount() (gas: 100196)
[PASS] testRefundBothPartiesInOneCall() (gas: 506523)
[PASS] testSettleAfterDeadlineAndRefundBlocking() (gas: 1421227)
[PASS] testSettleWithinDeadline() (gas: 516432)
[PASS] testZeroRefundAmount() (gas: 464176)
[PASS] test__codesize() (gas: 77448)
Suite result: ok. 24 passed; 0 failed; 0 skipped; finished in 4.03ms (2.37ms CPU time)

Ran 16 tests for test/SimpleFunder.t.sol:SimpleFunderTest
[PASS] testFuzz_fund_simulationMode_anySignature(bytes) (runs: 268, μ: 114510, ~: 114213)
[PASS] testFuzz_withdrawTokensWithSignature_differentAmounts(uint256,uint256,uint256) (runs: 268, μ: 152966, ~: 152865)
[PASS] testFuzz_withdrawTokensWithSignature_invalidSignatures(bytes,uint256,uint256,uint256) (runs: 268, μ: 50005, ~: 49998)
[PASS] test_fund_multipleTransfers() (gas: 802125)
[PASS] test_fund_nativeToken() (gas: 81623)
[PASS] test_fund_notOrchestrator_reverts() (gas: 39809)
[PASS] test_fund_simulationMode_bypasses_signatureValidation() (gas: 117202)
[PASS] test_fund_withInvalidSignature_reverts() (gas: 71159)
[PASS] test_fund_withValidSignature() (gas: 120206)
[PASS] test_receive() (gas: 33151)
[PASS] test_withdrawTokensWithSignature_expiredDeadline_reverts() (gas: 54040)
[PASS] test_withdrawTokensWithSignature_invalidNonce_reverts() (gas: 143048)
[PASS] test_withdrawTokensWithSignature_invalidSignature_reverts() (gas: 61781)
[PASS] test_withdrawTokensWithSignature_nativeToken() (gas: 114159)
[PASS] test_withdrawTokensWithSignature_validSignature() (gas: 138575)
[PASS] test_withdrawTokensWithSignature_zeroAmount() (gas: 115651)
Suite result: ok. 16 passed; 0 failed; 0 skipped; finished in 81.62ms (81.37ms CPU time)

Ran 22 tests for test/LayerZeroSettler.t.sol:LayerZeroSettlerTest
[PASS] testFuzz_executeSend_fullFlow(bytes32,address,bool,bool) (runs: 264, μ: 637716, ~: 523105)
[PASS] testFuzz_send_differentSettlementIds(bytes32,uint8) (runs: 256, μ: 61232, ~: 61357)
[PASS] test_escrowIntegration_successfulSettlement() (gas: 980010)
[PASS] test_executeSend_insufficientFee_reverts() (gas: 143578)
[PASS] test_executeSend_invalidEndpointId_reverts() (gas: 114878)
[PASS] test_executeSend_invalidSettlementId_reverts() (gas: 53908)
[PASS] test_executeSend_multipleDestinations_success() (gas: 899760)
[PASS] test_executeSend_orchestratorCanExecute() (gas: 520943)
[PASS] test_executeSend_preventReplay() (gas: 415792)
[PASS] test_executeSend_singleDestination_success() (gas: 534282)
[PASS] test_executeSend_withInvalidSignature_reverts() (gas: 111268)
[PASS] test_lzReceive_recordsSettlement() (gas: 520963)
[PASS] test_minimalType3Options() (gas: 707168)
[PASS] test_quoteFee_emptyArray() (gas: 2551)
[PASS] test_quoteFee_multipleEndpoints() (gas: 3188)
[PASS] test_quoteFee_withInvalidEndpoint() (gas: 3381)
[PASS] test_receive_externalEthTransfer() (gas: 39789)
[PASS] test_send_validSettlement() (gas: 60031)
[PASS] test_setL0SettlerSigner() (gas: 68714)
[PASS] test_withdraw_erc20Token_onlyOwner() (gas: 145173)
[PASS] test_withdraw_nativeToken_onlyOwner() (gas: 72649)
[PASS] test_withdraw_nonOwner_reverts() (gas: 36519)
Suite result: ok. 22 passed; 0 failed; 0 skipped; finished in 146.73ms (144.71ms CPU time)

Ran 4 tests for test/LibTStack.t.sol:LibTStackTest
[PASS] test__codesize() (gas: 47513)
[PASS] test_pop(bytes32) (runs: 268, μ: 290671, ~: 297470)
[PASS] test_push(bytes32) (runs: 268, μ: 224894, ~: 222709)
[PASS] test_top(bytes32) (runs: 268, μ: 29288, ~: 29353)
Suite result: ok. 4 passed; 0 failed; 0 skipped; finished in 208.90ms (211.27ms CPU time)

Ran 54 tests for test/Benchmark.t.sol:BenchmarkTest
[PASS] testERC20TransferDirect() (gas: 470833)
[PASS] testERC20TransferViaMinimals() (gas: 1167353)
[PASS] testERC20Transfer_AverageCost_AlchemyModularAccount() (gas: 6478941)
[PASS] testERC20Transfer_AverageCost_AlchemyModularAccount_AppSponsor() (gas: 6876281)
[PASS] testERC20Transfer_AverageCost_AlchemyModularAccount_ERC20SelfPay() (gas: 7481220)
[PASS] testERC20Transfer_AverageCost_CoinbaseSmartWallet() (gas: 7401438)
[PASS] testERC20Transfer_AverageCost_CoinbaseSmartWallet_AppSponsor() (gas: 7808360)
[PASS] testERC20Transfer_AverageCost_CoinbaseSmartWallet_ERC20SelfPay() (gas: 8379055)
[PASS] testERC20Transfer_AverageCost_IthacaAccount() (gas: 5250352)
[PASS] testERC20Transfer_AverageCost_IthacaAccount_AppSponsor() (gas: 6344694)
[PASS] testERC20Transfer_AverageCost_IthacaAccount_AppSponsor_ERC20() (gas: 6367852)
[PASS] testERC20Transfer_AverageCost_IthacaAccount_ERC20SelfPay() (gas: 5260405)
[PASS] testERC20Transfer_AverageCost_Safe4337() (gas: 8842202)
[PASS] testERC20Transfer_AverageCost_Safe4337_AppSponsor() (gas: 9184689)
[PASS] testERC20Transfer_AverageCost_Safe4337_ERC20SelfPay() (gas: 9756348)
[PASS] testERC20Transfer_AverageCost_ZerodevKernel() (gas: 7761115)
[PASS] testERC20Transfer_AverageCost_ZerodevKernel_AppSponsor() (gas: 8159727)
[PASS] testERC20Transfer_AverageCost_ZerodevKernel_ERC20SelfPay() (gas: 8765519)
[PASS] testERC20Transfer_MaximumCost_AlchemyModularAccount() (gas: 661141)
[PASS] testERC20Transfer_MaximumCost_AlchemyModularAccount_AppSponsor() (gas: 690657)
[PASS] testERC20Transfer_MaximumCost_AlchemyModularAccount_ERC20SelfPay() (gas: 725205)
[PASS] testERC20Transfer_MaximumCost_CoinbaseSmartWallet() (gas: 753883)
[PASS] testERC20Transfer_MaximumCost_CoinbaseSmartWallet_AppSponsor() (gas: 783854)
[PASS] testERC20Transfer_MaximumCost_CoinbaseSmartWallet_ERC20SelfPay() (gas: 816614)
[PASS] testERC20Transfer_MaximumCost_ERC4337MinimalAccount() (gas: 1948705)
[PASS] testERC20Transfer_MaximumCost_ERC4337MinimalAccount_AppSponsor() (gas: 1978289)
[PASS] testERC20Transfer_MaximumCost_ERC4337MinimalAccount_ERC20SelfPay() (gas: 2012792)
[PASS] testERC20Transfer_MaximumCost_IthacaAccount1() (gas: 534093)
[PASS] testERC20Transfer_MaximumCost_IthacaAccountWithSpendLimits() (gas: 1043112)
[PASS] testERC20Transfer_MaximumCost_IthacaAccount_AppSponsor() (gas: 592526)
[PASS] testERC20Transfer_MaximumCost_IthacaAccount_AppSponsor_ERC20() (gas: 600126)
[PASS] testERC20Transfer_MaximumCost_IthacaAccount_ERC20SelfPay() (gas: 536651)
[PASS] testERC20Transfer_MaximumCost_Safe4337() (gas: 880051)
[PASS] testERC20Transfer_MaximumCost_Safe4337_AppSponsor() (gas: 906824)
[PASS] testERC20Transfer_MaximumCost_Safe4337_ERC20SelfPay() (gas: 939663)
[PASS] testERC20Transfer_MaximumCost_ZerodevKernel() (gas: 766659)
[PASS] testERC20Transfer_MaximumCost_ZerodevKernel_AppSponsor() (gas: 796256)
[PASS] testERC20Transfer_MaximumCost_ZerodevKernel_ERC20SelfPay() (gas: 830807)
[PASS] testNativeTransfer_AlchemyModularAccount() (gas: 654470)
[PASS] testNativeTransfer_CoinbaseSmartWallet() (gas: 746889)
[PASS] testNativeTransfer_IthacaAccount() (gas: 527605)
[PASS] testNativeTransfer_IthacaAccount_AppSponsor() (gas: 586147)
[PASS] testNativeTransfer_IthacaAccount_ERC20SelfPay() (gas: 537538)
[PASS] testNativeTransfer_Safe4337() (gas: 872971)
[PASS] testNativeTransfer_ZerodevKernel() (gas: 760215)
[PASS] testUniswapV2Swap_AlchemyModularAccount() (gas: 711206)
[PASS] testUniswapV2Swap_CoinbaseSmartWallet() (gas: 804437)
[PASS] testUniswapV2Swap_ERC4337MinimalAccount() (gas: 1998866)
[PASS] testUniswapV2Swap_IthacaAccount() (gas: 583933)
[PASS] testUniswapV2Swap_IthacaAccount_AppSponsor() (gas: 642505)
[PASS] testUniswapV2Swap_IthacaAccount_ERC20SelfPay() (gas: 591411)
[PASS] testUniswapV2Swap_Safe4337() (gas: 930794)
[PASS] testUniswapV2Swap_ZerodevKernel() (gas: 816884)
[PASS] test__codesize() (gas: 351580)
Suite result: ok. 54 passed; 0 failed; 0 skipped; finished in 266.09ms (275.41ms CPU time)

Ran 3 tests for test/Benchmark2.t.sol:BenchmarkTest2
[PASS] testERC20Transfer() (gas: 136680345)
[PASS] testNativeTransfer() (gas: 11328136)
[PASS] test__codesize() (gas: 314961)
Suite result: ok. 3 passed; 0 failed; 0 skipped; finished in 311.02ms (324.15ms CPU time)

Ran 1 test for test/UpgradeTests.t.sol:UpgradeTest
[FAIL: vm.createSelectFork: could not instantiate forked environment with provider base-mainnet.g.alchemy.com; failed to get latest block number; HTTP error 401 with body: {"jsonrpc":"2.0","id":0,"error":{"code":-32600,"message":"Must be authenticated!"}}] setUp() (gas: 0)
Suite result: FAILED. 0 passed; 1 failed; 0 skipped; finished in 456.08ms (0.00ns CPU time)

Ran 8 tests for test/Account.t.sol:AccountTest
[PASS] testApproveAndRevokeKey(bytes32) (runs: 268, μ: 438105, ~: 392299)
[PASS] testCrossChainKeyPreCallsAuthorization() (gas: 963768)
[PASS] testExecuteWithSignature(bytes32) (runs: 268, μ: 499569, ~: 487682)
[PASS] testManyKeys() (gas: 2854371)
[PASS] testSignatureCheckerApproval(bytes32) (runs: 268, μ: 660723, ~: 675885)
[PASS] testUpgradeAccountToZeroAddressReverts() (gas: 272903)
[PASS] testUpgradeAccountWithPassKey(bytes32) (runs: 268, μ: 600957, ~: 600959)
[PASS] test__codesize() (gas: 67365)
Suite result: ok. 8 passed; 0 failed; 0 skipped; finished in 542.93ms (541.46ms CPU time)

Ran 17 tests for test/MultiSigSigner.t.sol:MultiSigSignerTest
[PASS] testFuzz_InitConfig(uint256,uint256) (runs: 268, μ: 282428, ~: 281297)
[PASS] testFuzz_SignatureValidation(uint256,uint256,uint256) (runs: 268, μ: 1465264, ~: 1386900)
[FAIL: InvalidKeyHash()] test_AddOwner() (gas: 357373)
Traces:
  [357373] MultiSigSignerTest::test_AddOwner()
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x382d41b51A37CaDA4a4520446Da2b2Bd2432C008
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xdc6999513539883ee37f4f1a0a2Ad573812B6A68
    ├─ [0] VM::startPrank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [103768] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [74143] MockAccount::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 })) [delegatecall]
    │   │   ├─ emit Authorized(keyHash: 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, key: Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    ├─ [113138] MultiSigSigner::initConfig(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 2, [0x6aad963c1713ef1a046bfc81eefcba67be7fe6ec23fb071de9c92255c015907d, 0x5c58580e4ef1ecb3cd7088f445669ada1225e237af7599adc2382fc79c76de5a])
    │   └─ ← [Stop]
    ├─ [0] VM::publicKeyP256(161972640268115442020950966658497419280827424826927054246 [1.619e56]) [staticcall]
    │   └─ ← [Return] 101897335428888605857629725274406184650813274985644888571770299864905480390716 [1.018e77], 3872109827365980310738494480568302451649603078055172267051154722481266191101 [3.872e75]
    ├─ [29747] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a)
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [845] MockAccount::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a) [delegatecall]
    │   │   └─ ← [Stop]
    │   └─ ← [Return]
    ├─ [33397] MultiSigSigner::addOwner(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 0x72adeae36c5cebed5fb4d9260bd846810183f911514509455b5165f33ac02b12)
    │   ├─ [7989] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::getContextKeyHash() [staticcall]
    │   │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [663] MockAccount::getContextKeyHash() [delegatecall]
    │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   └─ ← [Revert] InvalidKeyHash()
    └─ ← [Revert] InvalidKeyHash()

[PASS] test_AddOwner_InvalidKeyHash() (gas: 286863)
[FAIL: InvalidKeyHash()] test_DuplicateOwnerSignatures() (gas: 854180)
Traces:
  [854180] MultiSigSignerTest::test_DuplicateOwnerSignatures()
    ├─ [0] VM::publicKeyP256(1217360492430689388805396018250706199840706904979759619596 [1.217e57]) [staticcall]
    │   └─ ← [Return] 13434726669292941206706133893894581432477776345668462955964066355725489126774 [1.343e76], 90042481501353247385147615742805035623711894006463174860110980333860543599413 [9.004e76]
    ├─ [0] VM::publicKeyP256(5417221955952859477290834119756307240936780277181152396095 [5.417e57]) [staticcall]
    │   └─ ← [Return] 72581765718998871724684625762630656786755507041007776853428954512527029069720 [7.258e76], 95891225642982786834631950301485921062988042822202713386030769200248234120465 [9.589e76]
    ├─ [0] VM::startPrank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [103768] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [74143] MockAccount::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 })) [delegatecall]
    │   │   ├─ emit Authorized(keyHash: 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, key: Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    ├─ [129008] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::authorize(Key({ expiry: 0, keyType: 0, isSuperAdmin: false, publicKey: 0x1db3c92bf2097a5670e94a1cf92842e9ea311733c6dc7013e287936c4807bd76c7123d0e146c5916b45e5a4235d7c316c1751074a8af7623b51b696213751335 }))
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [98745] MockAccount::authorize(Key({ expiry: 0, keyType: 0, isSuperAdmin: false, publicKey: 0x1db3c92bf2097a5670e94a1cf92842e9ea311733c6dc7013e287936c4807bd76c7123d0e146c5916b45e5a4235d7c316c1751074a8af7623b51b696213751335 })) [delegatecall]
    │   │   ├─ emit Authorized(keyHash: 0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522, key: Key({ expiry: 0, keyType: 0, isSuperAdmin: false, publicKey: 0x1db3c92bf2097a5670e94a1cf92842e9ea311733c6dc7013e287936c4807bd76c7123d0e146c5916b45e5a4235d7c316c1751074a8af7623b51b696213751335 }))
    │   │   └─ ← [Return] 0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522
    │   └─ ← [Return] 0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522
    ├─ [0] VM::expectRevert(custom error 0xc31eb0e0: aabd5a0900000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return]
    ├─ [24770] MultiSigSigner::initConfig(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 2, [0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522])
    │   └─ ← [Revert] InvalidThreshold()
    ├─ [113138] MultiSigSigner::initConfig(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 2, [0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522, 0x29cc26afac790a6aa7a1983301fb6eb7967f92b6bdeec8c15610eac4a1598bed])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::signP256("<pk>", 0xea83cdcdd06bf61e414054115a551e23133711d0507dcbc07a4bab7dc4581935) [staticcall]
    │   └─ ← [Return] 0xb85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d, 0x3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753
    ├─ [0] VM::prank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [371163] MultiSigSigner::isValidSignatureWithKeyHash(0xea83cdcdd06bf61e414054115a551e23133711d0507dcbc07a4bab7dc4581935, 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000061b85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753a88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab648352200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000061b85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753a88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab64835220000000000000000000000000000000000000000000000000000000000000000) [staticcall]
    │   ├─ [183755] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::unwrapAndValidateSignature(0xea83cdcdd06bf61e414054115a551e23133711d0507dcbc07a4bab7dc4581935, 0xb85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753a88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab648352200) [staticcall]
    │   │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [176387] MockAccount::unwrapAndValidateSignature(0xea83cdcdd06bf61e414054115a551e23133711d0507dcbc07a4bab7dc4581935, 0xb85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753a88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab648352200) [delegatecall]
    │   │   │   ├─ [165229] 0x0000000000000000000000000000000000000100::ea83cdcd(d06bf61e414054115a551e23133711d0507dcbc07a4bab7dc4581935b85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd7531db3c92bf2097a5670e94a1cf92842e9ea311733c6dc7013e287936c4807bd76c7123d0e146c5916b45e5a4235d7c316c1751074a8af7623b51b696213751335) [staticcall]
    │   │   │   │   ├─ [1360] PRECOMPILES::modexp(32, 32, 32, 0x3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753, 0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f, 0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551) [staticcall]
    │   │   │   │   │   └─ ← [Return] 0xe2499d4b0162fa9a48309a373aa9f63e76922c7d69891127b480b0f82774d9c7
    │   │   │   │   ├─ [1360] PRECOMPILES::modexp(32, 32, 32, 0x0ae1d6e5f650cf035ccfca2ad556614d2d328fdee598e3f599b84a1483f950b0, 0xffffffff00000001000000000000000000000000fffffffffffffffffffffffd, 0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff) [staticcall]
    │   │   │   │   │   └─ ← [Return] 0x08ff2fdab967613ea2895151ab88ddd0cca15dcdf18be7f05564b011eb750f6c
    │   │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000001
    │   │   │   └─ ← [Return] true, 0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522
    │   │   └─ ← [Return] true, 0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522
    │   ├─ [168755] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::unwrapAndValidateSignature(0xea83cdcdd06bf61e414054115a551e23133711d0507dcbc07a4bab7dc4581935, 0xb85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753a88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab648352200) [staticcall]
    │   │   ├─ [199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [167887] MockAccount::unwrapAndValidateSignature(0xea83cdcdd06bf61e414054115a551e23133711d0507dcbc07a4bab7dc4581935, 0xb85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753a88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab648352200) [delegatecall]
    │   │   │   ├─ [165229] 0x0000000000000000000000000000000000000100::ea83cdcd(d06bf61e414054115a551e23133711d0507dcbc07a4bab7dc4581935b85db7fad26c608dd522e52da60b040c26751780a9bb7d449c4edd1e9f5ba29d3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd7531db3c92bf2097a5670e94a1cf92842e9ea311733c6dc7013e287936c4807bd76c7123d0e146c5916b45e5a4235d7c316c1751074a8af7623b51b696213751335) [staticcall]
    │   │   │   │   ├─ [1360] PRECOMPILES::modexp(32, 32, 32, 0x3d3efda5d43c90d9fdd52688111c8c809b666cc9c4f51b5c3d05c378a16dd753, 0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f, 0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551) [staticcall]
    │   │   │   │   │   └─ ← [Return] 0xe2499d4b0162fa9a48309a373aa9f63e76922c7d69891127b480b0f82774d9c7
    │   │   │   │   ├─ [1360] PRECOMPILES::modexp(32, 32, 32, 0x0ae1d6e5f650cf035ccfca2ad556614d2d328fdee598e3f599b84a1483f950b0, 0xffffffff00000001000000000000000000000000fffffffffffffffffffffffd, 0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff) [staticcall]
    │   │   │   │   │   └─ ← [Return] 0x08ff2fdab967613ea2895151ab88ddd0cca15dcdf18be7f05564b011eb750f6c
    │   │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000001
    │   │   │   └─ ← [Return] true, 0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522
    │   │   └─ ← [Return] true, 0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522
    │   └─ ← [Return] 0xffffffff
    ├─ [0] VM::startPrank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [29747] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a)
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [845] MockAccount::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a) [delegatecall]
    │   │   └─ ← [Stop]
    │   └─ ← [Return]
    ├─ [33397] MultiSigSigner::addOwner(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 0xa88befa78f6dc8aabf6d32a5a2652a3f9bb0d8935973fb8153093ddab6483522)
    │   ├─ [7989] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::getContextKeyHash() [staticcall]
    │   │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [663] MockAccount::getContextKeyHash() [delegatecall]
    │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   └─ ← [Revert] InvalidKeyHash()
    └─ ← [Revert] InvalidKeyHash()

[PASS] test_InitConfig() (gas: 220523)
[PASS] test_InitConfig_InvalidThreshold() (gas: 121618)
[PASS] test_InitConfig_RevertsOnReinit() (gas: 137425)
[PASS] test_InvalidSignature_BelowThreshold() (gas: 819644)
[PASS] test_InvalidSignature_NonOwner() (gas: 810347)
[FAIL: InvalidKeyHash()] test_RemoveOwner() (gas: 380731)
Traces:
  [380731] MultiSigSignerTest::test_RemoveOwner()
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x5A83529ff76Ac5723A87008c4D9B436AD4CA7d28
    ├─ [0] VM::publicKeyP256(3053553766679400776163611035608023463155685978003849910740 [3.053e57]) [staticcall]
    │   └─ ← [Return] 7268796287425395250814499667255430995008511485344958283601808565242964113304 [7.268e75], 11215512984780879187898916076970874190135753349243795424262321536247821968025 [1.121e76]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x80C0dbf239224071c59dD8970ab9d542E3414aB2
    ├─ [0] VM::startPrank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [103768] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [74143] MockAccount::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 })) [delegatecall]
    │   │   ├─ emit Authorized(keyHash: 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, key: Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    ├─ [135887] MultiSigSigner::initConfig(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 2, [0x846d29d12235d5bbe0d14ebe60c11f4e6e42d00ff8ab90856146063ba294bcd6, 0xf23609a562d7a99aa967db5cdea2a57f5ec61c62ceed140097608332f401646d, 0xb14dd6b0c05baa2cf403f615ebeb1c4382c3215fb2d0f812e056e11ee670c0a5])
    │   └─ ← [Stop]
    ├─ [29747] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a)
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [845] MockAccount::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a) [delegatecall]
    │   │   └─ ← [Stop]
    │   └─ ← [Return]
    ├─ [33363] MultiSigSigner::removeOwner(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 0xf23609a562d7a99aa967db5cdea2a57f5ec61c62ceed140097608332f401646d)
    │   ├─ [7989] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::getContextKeyHash() [staticcall]
    │   │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [663] MockAccount::getContextKeyHash() [delegatecall]
    │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   └─ ← [Revert] InvalidKeyHash()
    └─ ← [Revert] InvalidKeyHash()

[FAIL: Error != expected error: InvalidKeyHash() != OwnerNotFound()] test_RemoveOwner_OwnerNotFound() (gas: 354899)
Traces:
  [354899] MultiSigSignerTest::test_RemoveOwner_OwnerNotFound()
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x382d41b51A37CaDA4a4520446Da2b2Bd2432C008
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xdc6999513539883ee37f4f1a0a2Ad573812B6A68
    ├─ [0] VM::startPrank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [103768] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [74143] MockAccount::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 })) [delegatecall]
    │   │   ├─ emit Authorized(keyHash: 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, key: Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    ├─ [113138] MultiSigSigner::initConfig(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 1, [0x6aad963c1713ef1a046bfc81eefcba67be7fe6ec23fb071de9c92255c015907d, 0x5c58580e4ef1ecb3cd7088f445669ada1225e237af7599adc2382fc79c76de5a])
    │   └─ ← [Stop]
    ├─ [29747] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a)
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [845] MockAccount::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a) [delegatecall]
    │   │   └─ ← [Stop]
    │   └─ ← [Return]
    ├─ [0] VM::expectRevert(custom error 0xc31eb0e0: ae4575cd00000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return]
    ├─ [33015] MultiSigSigner::removeOwner(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 0x00000000000000000000000000000000000000000000000000000000000003e7)
    │   ├─ [7989] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::getContextKeyHash() [staticcall]
    │   │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [663] MockAccount::getContextKeyHash() [delegatecall]
    │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   └─ ← [Revert] InvalidKeyHash()
    └─ ← [Revert] Error != expected error: InvalidKeyHash() != OwnerNotFound()

[FAIL: Error != expected error: InvalidKeyHash() != InvalidThreshold()] test_RemoveOwner_ThresholdViolation() (gas: 355338)
Traces:
  [355338] MultiSigSignerTest::test_RemoveOwner_ThresholdViolation()
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x382d41b51A37CaDA4a4520446Da2b2Bd2432C008
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xdc6999513539883ee37f4f1a0a2Ad573812B6A68
    ├─ [0] VM::startPrank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [103768] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [74143] MockAccount::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 })) [delegatecall]
    │   │   ├─ emit Authorized(keyHash: 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, key: Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    ├─ [113138] MultiSigSigner::initConfig(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 2, [0x6aad963c1713ef1a046bfc81eefcba67be7fe6ec23fb071de9c92255c015907d, 0x5c58580e4ef1ecb3cd7088f445669ada1225e237af7599adc2382fc79c76de5a])
    │   └─ ← [Stop]
    ├─ [29747] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a)
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [845] MockAccount::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a) [delegatecall]
    │   │   └─ ← [Stop]
    │   └─ ← [Return]
    ├─ [0] VM::expectRevert(custom error 0xc31eb0e0: aabd5a0900000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return]
    ├─ [33375] MultiSigSigner::removeOwner(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 0x6aad963c1713ef1a046bfc81eefcba67be7fe6ec23fb071de9c92255c015907d)
    │   ├─ [7989] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::getContextKeyHash() [staticcall]
    │   │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [663] MockAccount::getContextKeyHash() [delegatecall]
    │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   └─ ← [Revert] InvalidKeyHash()
    └─ ← [Revert] Error != expected error: InvalidKeyHash() != InvalidThreshold()

[FAIL: InvalidKeyHash()] test_SetThreshold() (gas: 380290)
Traces:
  [380290] MultiSigSignerTest::test_SetThreshold()
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x5A83529ff76Ac5723A87008c4D9B436AD4CA7d28
    ├─ [0] VM::publicKeyP256(3053553766679400776163611035608023463155685978003849910740 [3.053e57]) [staticcall]
    │   └─ ← [Return] 7268796287425395250814499667255430995008511485344958283601808565242964113304 [7.268e75], 11215512984780879187898916076970874190135753349243795424262321536247821968025 [1.121e76]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x80C0dbf239224071c59dD8970ab9d542E3414aB2
    ├─ [0] VM::startPrank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [103768] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [74143] MockAccount::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 })) [delegatecall]
    │   │   ├─ emit Authorized(keyHash: 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, key: Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    ├─ [135887] MultiSigSigner::initConfig(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 1, [0x846d29d12235d5bbe0d14ebe60c11f4e6e42d00ff8ab90856146063ba294bcd6, 0xf23609a562d7a99aa967db5cdea2a57f5ec61c62ceed140097608332f401646d, 0xb14dd6b0c05baa2cf403f615ebeb1c4382c3215fb2d0f812e056e11ee670c0a5])
    │   └─ ← [Stop]
    ├─ [29747] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a)
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [845] MockAccount::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a) [delegatecall]
    │   │   └─ ← [Stop]
    │   └─ ← [Return]
    ├─ [33024] MultiSigSigner::setThreshold(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 2)
    │   ├─ [7989] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::getContextKeyHash() [staticcall]
    │   │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [663] MockAccount::getContextKeyHash() [delegatecall]
    │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   └─ ← [Revert] InvalidKeyHash()
    └─ ← [Revert] InvalidKeyHash()

[FAIL: Error != expected error: InvalidKeyHash() != InvalidThreshold()] test_SetThreshold_Invalid() (gas: 354883)
Traces:
  [354883] MultiSigSignerTest::test_SetThreshold_Invalid()
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x382d41b51A37CaDA4a4520446Da2b2Bd2432C008
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xdc6999513539883ee37f4f1a0a2Ad573812B6A68
    ├─ [0] VM::startPrank(0xF29C3B95B53924112bE99B742c1efED7A07Fc72D)
    │   └─ ← [Return]
    ├─ [103768] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [74143] MockAccount::authorize(Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 })) [delegatecall]
    │   │   ├─ emit Authorized(keyHash: 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, key: Key({ expiry: 0, keyType: 3, isSuperAdmin: true, publicKey: 0xa0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000 }))
    │   │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    │   └─ ← [Return] 0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a
    ├─ [113138] MultiSigSigner::initConfig(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 1, [0x6aad963c1713ef1a046bfc81eefcba67be7fe6ec23fb071de9c92255c015907d, 0x5c58580e4ef1ecb3cd7088f445669ada1225e237af7599adc2382fc79c76de5a])
    │   └─ ← [Stop]
    ├─ [29747] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a)
    │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   ├─ [845] MockAccount::setContextKeyHash(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a) [delegatecall]
    │   │   └─ ← [Stop]
    │   └─ ← [Return]
    ├─ [0] VM::expectRevert(custom error 0xc31eb0e0: aabd5a0900000000000000000000000000000000000000000000000000000000)
    │   └─ ← [Return]
    ├─ [33012] MultiSigSigner::setThreshold(0x82533c88295efbd8b257ac61c73712180a53dff76cf5dfbbe3355d46998bea0a, 0)
    │   ├─ [7989] 0xF29C3B95B53924112bE99B742c1efED7A07Fc72D::getContextKeyHash() [staticcall]
    │   │   ├─ [2199] 0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9::fallback() [staticcall]
    │   │   │   └─ ← [Return] 0x000000000000000000000000f62849f9a0b5bf2913b396098f7c7019b51a820a
    │   │   ├─ [663] MockAccount::getContextKeyHash() [delegatecall]
    │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   └─ ← [Revert] InvalidKeyHash()
    └─ ← [Revert] Error != expected error: InvalidKeyHash() != InvalidThreshold()

[PASS] test_ValidSignature_MeetsThreshold() (gas: 1002103)
[PASS] test__codesize() (gas: 73369)
Suite result: FAILED. 10 passed; 7 failed; 0 skipped; finished in 650.80ms (655.62ms CPU time)

Ran 15 tests for test/GuardedExecutor.t.sol:GuardedExecutorTest
[PASS] testApproveIncreaseSpent(bytes32) (runs: 268, μ: 1195100, ~: 1195306)
[PASS] testCanExecuteGetsResetAfterKeyIsReadded(address,bytes4) (runs: 268, μ: 422665, ~: 422742)
[PASS] testOnlySuperAdminAndEOACanSelfExecute() (gas: 2245715)
[PASS] testSetAndGetCallCheckers(bytes32) (runs: 268, μ: 2191999, ~: 2191696)
[PASS] testSetAndGetCanExecute(address,bytes4,bytes32) (runs: 268, μ: 495340, ~: 520596)
[PASS] testSetAndRemoveSpendLimit(uint256) (runs: 268, μ: 2255626, ~: 2256821)
[PASS] testSetAndRemoveSpendLimitRevertsForSuperAdmin() (gas: 486742)
[PASS] testSetSpendLimitWithTwoPeriods() (gas: 1249828)
[PASS] testSpendERC20WithSecp256k1ViaOrchestrator() (gas: 4950590)
[PASS] testSpendERC20WithSecp256r1ViaOrchestrator() (gas: 7202757)
[PASS] testSpendNativeWithSecp256k1ViaOrchestrator() (gas: 4645348)
[PASS] testSpendNativeWithSecp256r1ViaOrchestrator() (gas: 6890838)
[PASS] testSpends(bytes32) (runs: 268, μ: 1690786, ~: 1580661)
[PASS] testTransferFromGuard(bytes32) (runs: 268, μ: 984194, ~: 1220477)
[PASS] test__codesize() (gas: 98592)
Suite result: ok. 15 passed; 0 failed; 0 skipped; finished in 1.31s (3.87s CPU time)

Ran 6 tests for test/SimulateExecute.t.sol:SimulateExecuteTest
[PASS] testSimulateExecuteNoRevert() (gas: 972170)
[PASS] testSimulateExecuteNoRevertUnderfundedReverts() (gas: 1137354)
[PASS] testSimulateExecuteWithEOAKey(bytes32) (runs: 268, μ: 1633220, ~: 718232)
[PASS] testSimulateExecuteWithPassKey(bytes32) (runs: 268, μ: 2421129, ~: 1548592)
[PASS] testSimulateV1Logs() (gas: 1352068)
[PASS] test__codesize() (gas: 66724)
Suite result: ok. 6 passed; 0 failed; 0 skipped; finished in 1.91s (2.58s CPU time)

Ran 23 tests for test/Orchestrator.t.sol:OrchestratorTest
[PASS] testAccountImplementationVerification(bytes32) (runs: 268, μ: 208171, ~: 217341)
[PASS] testAccountPaymaster(bytes32) (runs: 268, μ: 875139, ~: 833970)
[PASS] testAuthorizeWithPreCallsAndTransfer(bytes32) (runs: 268, μ: 1550052, ~: 1437631)
[PASS] testExceuteGasUsed() (gas: 497097)
[PASS] testExceuteRevertsIfPaymentIsInsufficient() (gas: 193168)
[PASS] testExecuteBatchCalls(uint256) (runs: 268, μ: 385674, ~: 477275)
[PASS] testExecutePreCalls() (gas: 239479)
[PASS] testExecutePreCallsFromFeePayer() (gas: 513904)
[PASS] testExecuteUserBatchCalls(uint256) (runs: 268, μ: 697066, ~: 706850)
[PASS] testExecuteWithPayingERC20Tokens(bytes32) (runs: 268, μ: 705954, ~: 705946)
[PASS] testExecuteWithSecp256k1PassKey() (gas: 863289)
[PASS] testExecuteWithUnauthorizedPayer() (gas: 338191)
[PASS] testFullFlow(uint256) (runs: 268, μ: 574501, ~: 583681)
[PASS] testInitAndTransferInOneShot(bytes32) (runs: 268, μ: 1284091, ~: 1390425)
[PASS] testIntentExpiry() (gas: 810096)
[PASS] testInvalidateNonce(uint96,uint64,uint64) (runs: 268, μ: 469938, ~: 487383)
[PASS] testKeySlots() (gas: 273228)
[PASS] testMultiChainIntent() (gas: 10533711)
[PASS] testMultiSig(bytes32) (runs: 268, μ: 4808875, ~: 5305326)
[PASS] testPayViaAnotherPayer(bytes32) (runs: 268, μ: 1783308, ~: 1782037)
[PASS] testSimulateFailed() (gas: 578724)
[PASS] testWithdrawTokens() (gas: 181294)
[PASS] test__codesize() (gas: 136341)
Suite result: ok. 23 passed; 0 failed; 0 skipped; finished in 2.73s (5.74s CPU time)

Ran 17 test suites in 2.73s (8.62s CPU time): 196 tests passed, 8 failed, 0 skipped (204 total tests)

Failing tests:
Encountered 7 failing tests in test/MultiSigSigner.t.sol:MultiSigSignerTest
[FAIL: InvalidKeyHash()] test_AddOwner() (gas: 357373)
[FAIL: InvalidKeyHash()] test_DuplicateOwnerSignatures() (gas: 854180)
[FAIL: InvalidKeyHash()] test_RemoveOwner() (gas: 380731)
[FAIL: Error != expected error: InvalidKeyHash() != OwnerNotFound()] test_RemoveOwner_OwnerNotFound() (gas: 354899)
[FAIL: Error != expected error: InvalidKeyHash() != InvalidThreshold()] test_RemoveOwner_ThresholdViolation() (gas: 355338)
[FAIL: InvalidKeyHash()] test_SetThreshold() (gas: 380290)
[FAIL: Error != expected error: InvalidKeyHash() != InvalidThreshold()] test_SetThreshold_Invalid() (gas: 354883)

Encountered 1 failing test in test/UpgradeTests.t.sol:UpgradeTest
[FAIL: vm.createSelectFork: could not instantiate forked environment with provider base-mainnet.g.alchemy.com; failed to get latest block number; HTTP error 401 with body: {"jsonrpc":"2.0","id":0,"error":{"code":-32600,"message":"Must be authenticated!"}}] setUp() (gas: 0)

Encountered a total of 8 failing tests, 196 tests succeeded
